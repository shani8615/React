{"version":3,"sources":["Search.js","User.js","App.js","index.js"],"names":["customStorageCapacityRanges","Search","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleStorageCapacityChange","value","setState","storageCapacity","handleFilterChange","e","selectedOption","target","handleCheckboxChange","prevState","isCheckboxChecked","handleStorageOptionChange","option","selectedStorageOptions","_toConsumableArray","includes","splice","indexOf","push","handleLocationChange","selectedLocation","handleHdtypeChange","selectedHdtype","handleSearch","selectedIndex","state","filterData","slice","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","updateUserState","catch","error","handleReset","_createClass","key","_this2","rangeValueIndex","this","_jsx","className","children","_jsxs","type","min","max","length","step","onChange","join","map","checked","onClick","Component","Users","filteredUsers","users","loading","getUsers","axios","get","_Fragment","user","Model","RAM","HDD","Location","Price","UserSearchApp","apply","arguments","ReactDOM","render","React","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.de191bca.chunk.js","sourcesContent":["import React, { Component } from 'react';\n   const customStorageCapacityRanges = [\n      '0',\n      '250GB',\n      '500GB',\n      '1TB',\n      '2TB',\n      '3TB',\n      '4TB',\n      '8TB',\n      '12TB',\n      '24TB',\n      '48TB',\n      '72TB',\n    ];\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      storageCapacity: '0', // Default frequency value\n      selectedHdtype: 'All', // Default filter option\n      isCheckboxChecked: false, // Checkbox initial state\n      selectedStorageOptions: [], // Array to store selected storage options\n      selectedLocation: 'All', // Default location filter\n    };\n  }\n\n  handleStorageCapacityChange = (value) => {\n    this.setState({ storageCapacity: value });\n    // You can add code here to filter the user list based on the selected storage capacity.\n  }\n\n  handleFilterChange = (e) => {\n    this.setState({ selectedOption: e.target.value });\n    // You can add code here to filter the user list based on the selected filter option.\n  }\n\n  handleCheckboxChange = () => {\n    this.setState((prevState) => ({\n      isCheckboxChecked: !prevState.isCheckboxChecked,\n    }));\n    // You can add code here to handle the checkbox state and filter accordingly.\n  }\n\n  handleStorageOptionChange = (option) => {\n    // Toggle the selected storage option in the state array\n    this.setState((prevState) => {\n      const selectedStorageOptions = [...prevState.selectedStorageOptions];\n\n      if (selectedStorageOptions.includes(option)) {\n        selectedStorageOptions.splice(\n          selectedStorageOptions.indexOf(option),\n          1\n        );\n      } else {\n        selectedStorageOptions.push(option);\n      }\n\n      return { selectedStorageOptions };\n    });\n    // You can add code here to filter the user list based on selected storage options.\n  }\n\n  handleLocationChange = (e) => {\n    this.setState({ selectedLocation: e.target.value });\n    // You can add code here to filter the user list based on the selected location.\n  }\n\n   handleHdtypeChange = (e) => {\n    this.setState({ selectedHdtype: e.target.value });\n    // You can add code here to filter the user list based on the selected location.\n  }\n\n  handleSearch = () => {\n    // Collect all filter data from the state\n    const selectedIndex = customStorageCapacityRanges.indexOf(this.state.storageCapacity);\n\n  // Create a new array with all the range values up to the selected one\n  const selectedStorageOptions = customStorageCapacityRanges.slice(0, selectedIndex + 1);\n\n    const filterData = {\n      storageCapacity: selectedStorageOptions,\n      selectedHdtype: this.state.selectedHdtype,\n      isCheckboxChecked: this.state.isCheckboxChecked,\n      selectedStorageOptions: this.state.selectedStorageOptions,\n      selectedLocation: this.state.selectedLocation,\n    };\n\n    console.log(\"data\",filterData);\n    // Replace the URL with your API endpoint\n    const apiUrl = 'http://localhost:8000/api/filter-users'; // Update with your API URL\n\n    // Send a POST request with the filter data to the API\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(filterData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Handle the API response data here\n        console.log('API Response:', data);\n        this.props.updateUserState(data);\n      })\n      .catch((error) => {\n        console.error('API Error:', error);\n      });\n  }\n\n    handleReset = () => {\n    // Reset all filter values to their initial state\n    this.setState({\n      storageCapacity: '0',\n      selectedHdtype: 'All',\n      isCheckboxChecked: false,\n      selectedStorageOptions: [],\n      selectedLocation: 'All',\n    });\n\n    const filterData = {\n    storageCapacity: '0',\n    selectedHdtype: 'All',\n    isCheckboxChecked: false,\n    selectedStorageOptions: [],\n    selectedLocation: 'All',\n  };\n\n    console.log(\"data\",filterData);\n    // Replace the URL with your API endpoint\n    const apiUrl = 'http://localhost:8000/api/filter-users'; // Update with your API URL\n\n    // Send a POST request with the filter data to the API\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(filterData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Handle the API response data here\n        console.log('API Response:', data);\n        this.props.updateUserState(data);\n      })\n      .catch((error) => {\n        console.error('API Error:', error);\n      });\n  };\n\n  render() {\n    const storageOptions = [\"2GB\", \"4GB\", \"8GB\", \"12GB\", \"16GB\", \"24GB\", \"32GB\", \"48GB\", \"64GB\", \"96GB\"];\n    const locationOptions = [\n      'All',\n      'AmsterdamAMS-01',\n      'Washington D.C.WDC-01',\n      'San FranciscoSFO-12',\n      'SingaporeSIN-11',\n      'DallasDAL-10',\n      'FrankfurtFRA-10',\n      'Hong KongHKG-10',\n    ];\n\n     const HdtypeOptions = [\n    'All','SAS', 'SATA', 'SSD'\n    ];\n    // Custom storage capacity range options\n \n    const rangeValueIndex = customStorageCapacityRanges.indexOf(this.state.storageCapacity);\n\n    return (\n      <div className=\"search-container\">\n        <div className=\"filters-drawer\">\n          <div className=\"filter-group\">\n            <h3 className=\"filter-heading\">Storage</h3>\n           <input\n      type=\"range\"\n      min=\"0\"\n      max={customStorageCapacityRanges.length - 1}\n      step=\"1\"\n      value={rangeValueIndex}\n      onChange={(e) =>\n        this.handleStorageCapacityChange(customStorageCapacityRanges[e.target.value])\n      }\n      className=\"range-slider\"\n    />\n    <div className=\"range-value-marker\">\n       {customStorageCapacityRanges\n                .slice(0, rangeValueIndex + 1) // Get values up to the selected index\n                .join(' - ')}\n    </div>\n\n          </div>\n          <div className=\"filter-group\">\n            <h3 className=\"filter-heading\">Ram</h3>\n            <div className=\"checkbox-options\">\n              {storageOptions.map((option) => (\n                <label className=\"checkbox-label\" key={option}>\n                  <input\n                    type=\"checkbox\"\n                    checked={this.state.selectedStorageOptions.includes(option)}\n                    onChange={() => this.handleStorageOptionChange(option)}\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          </div>\n          <div className=\"filter-group\">\n            <h3 className=\"filter-heading\">Location</h3>\n            <select\n              className=\"select-box\"\n              value={this.state.selectedLocation}\n              onChange={this.handleLocationChange}\n            >\n              {locationOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n\n           <div className=\"filter-group\">\n            <h3 className=\"filter-heading\">Hard Disk Type</h3>\n            <select\n              className=\"select-box\"\n              value={this.state.selectedHdtype}\n              onChange={this.handleHdtypeChange}\n            >\n              {HdtypeOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n        \n        <div className=\"filter-group\">\n        <button className=\"search-button\" onClick={this.handleSearch}>\n          Search\n        </button>\n        <button className=\"search-button\" onClick={this.handleReset}>\n          Reset\n        </button>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Search from './Search';\nimport './App.css'; // Import your CSS file\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = { users: [], loading: true };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    axios.get(`http://localhost:8000/api/users`).then((response) => {\n      this.setState({ users: response.data, loading: false });\n    });\n  }\n\n  updateUserState = (filteredUsers) => {\n    this.setState({ users: filteredUsers });\n  }\n\n  render() {\n    const loading = this.state.loading;\n    return (\n      <>\n        <Search updateUserState={this.updateUserState} />\n        <div className=\"user-list-container\">\n          {loading ? (\n            <div className=\"text-center loading-spinner\">\n              <span className=\"fa fa-spin fa-spinner fa-4x\"></span>\n            </div>\n          ) : (\n            <div className=\"user-list\">\n              {this.state.users.map((user) => (\n                <div className=\"user-item\">\n                  <div className=\"user-details\">\n                    <h2>{user.Model}</h2>\n                    <h3>RAM : {user.RAM}</h3>\n                    <p>HDD : {user.HDD}</p>\n                    <p>Location : {user.Location}</p>\n                  </div>\n                  <div className=\"user-price\">\n                    <h4>Price : {user.Price}</h4>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Users from './User';\n// import Search from './Search';\n\nclass UserSearchApp extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Users />\n      </div>\n    );\n  }\n}\n\nexport default UserSearchApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}